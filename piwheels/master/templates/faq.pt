<div metal:use-macro="layout">
  <div metal:fill-slot="title" tal:omit-tag="1">FAQ</div>
  <div metal:fill-slot="content">
    <div class="row">
      <div class="small-12 columns">
        <h2>FAQ</h2>
      </div>
    </div>

    <div class="row" id="faq">
      <div class="small-12 columns">
        <div class="accordion" data-accordion data-allow-all-closed="true" data-multi-expand="true">
          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How do I install packages from piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <h3>Raspbian Buster or Stretch:</h3>
              <p>You should have a <code>/etc/pip.conf</code> file containing:</p>

              <pre>[global]
extra-index-url=https://www.piwheels.org/simple</pre>

              <p>If that's there, pip should use piwheels. If not, create the
              file and add those lines to it.</p>

              <h3>Raspbian Jessie:</h3>
              <p>Upgrade pip to &gt;=9.0.1 using <code>sudo pip3 install pip
                --upgrade</code> and follow the Raspbian Buster/Stretch
              instructions.</p>

              <h3>Other operating systems:</h3>
              <p>Install pip &gt;=9.0.1, and follow the Raspbian Buster/Stretch
              instructions.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How do I install a package from
              piwheels within a virtual environment?</a>

            <div class="accordion-content" data-tab-content>
              <p>If you had to upgrade pip to &gt;=9.0.1 you may also need to
              upgrade pip within the virtual environment with <code>pip install
              pip --upgrade</code>. If not (e.g. in Raspbian Buster or Stretch),
              pip should honour your <code>/etc/pip.conf</code> file and use
              piwheels as configured.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How do I install a package from
              piwheels without changing my pip configuration?</a>

            <div class="accordion-content" data-tab-content>
              <p>You can use piwheels as an additional index,
              which will allow pip to fall back to PyPI if the requested
              package (or one of its dependencies) is not available on
              piwheels, by using the <code>--extra-index-url</code> option, for
              example:</p>

              <pre>$ sudo pip3 install numpy --extra-index-url https://www.piwheels.org/simple</pre>

              <p>Alternatively, to only use piwheels, use the <code>-i</code> or
              <code>--index-url</code> option, for example:</p>

              <pre>$ sudo pip3 install numpy -i https://www.piwheels.org/simple</pre>

              <p>or</p>

              <pre>$ sudo pip3 install numpy --index-url https://www.piwheels.org/simple</pre>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How do I install a package from
            PyPI (not from piwheels)?</a>

            <div class="accordion-content" data-tab-content>
              <p>If your pip is configured to use piwheels, but you want to use
              PyPI instead, you can either remove or comment out the
              <code>extra-index-url</code> configuration in
              <code>/etc/pip.conf</code>, or you can explicitly request no
              binary distribution in the installation command, and you'll get
              source distribution from PyPI, for example:</p>

              <pre>$ sudo pip3 install numpy --no-binary :all:</pre>

              or to use the <code>--no-binary</code> option for a single package
              (e.g. get the tensorflow wheel but force a build of one of its
              dependencies, grpcio):

              <pre>$ sudo pip3 install tensorflow --no-binary grpcio</pre>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How much time does piwheels save?</a>

            <div class="accordion-content" data-tab-content>
              <p>Time saved depends on the package requested, and the Raspberry
              Pi model used. Some packages usually require significant build
              time, which is avoided by using piwheels. Many packages are
              usually quite quick to install anyway, and only a small amount of
              time is saved. Build time on Pi 1 and Pi Zero is much longer than
              Pi 3 (roughly 6x), so the biggest gains are there.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">I maintain a package on PyPI. How do I
              publish it on piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <p>You don't need to do anything. All package releases on PyPI
              are automatically processed by the piwheels project. As long as
              you upload a source distribution, we'll attempt to build it.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Why is a package I maintain not
              available on piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <p>Some packages fail to build, for various reasons. If you would
              like to investigate, try building the package yourself on a
              Raspberry Pi 3 with a Raspbian Lite image by running pip3 wheel
              &lt;package&gt;. If you find you are able to successfully build
              the package (for example, by installing some build dependencies),
              please <a
              href="https://github.com/piwheels/packages/issues/new?template=missing-package.md">open
              an issue on github</a> and we'll try to resolve it. Also see the
              following answer.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Why are some versions of a package
              available on piwheels and other versions are not?</a>

            <div class="accordion-content" data-tab-content>
              <p>You may discover that piwheels manages to build some versions
              of a package and fails to build others. Success and failure per
              ABI is noted on each package's project page. Search for a package
              on the <a href="https://www.piwheels.org/packages.html">package
              list page</a>. If you maintain the package or otherwise have a
              solution for the build, please <a
              href="https://github.com/piwheels/packages/issues/new?template=missing-package.md">open
              an issue on github</a> and we'll try to resolve it.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">How long does it take for a new release
              to become available on piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <p>piwheels should notice the registration of a new package or
              version within about 10 seconds. How long it takes for that
              version to be built then depends on two factors:</p>

              <ul>
                <li><em>Build queue</em>. Sometimes, particularly when a new
                Raspbian version is released, piwheels will be busy working
                through a large build queue, and it may take a while to reach a
                package.</li>
                <li><em>Build time</em>. If the package is pure python it
                  should build within a few seconds and appear very quickly.
                  Alternatively if it's a big chunk of C++ with lots of
                  generics it can take hours to compile (the longest compile
                  time for a successful build is currently over 3 hours).</li>
              </ul>

              <p>So ultimately the time for a new release to appear can be
              anything from about 10 seconds up to several hours (for complex
              to build packages) or several days (when piwheels has a large
              backlog of packages to work through).</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Does piwheels use
              cross-compilation?</a>

            <div class="accordion-content" data-tab-content>
              <p>No. All wheels are built natively on the Raspbian operating
              system on Raspberry Pi 3 hardware.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Which Raspberry Pi models are
            supported by packages provided by piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <p>All current Raspberry Pi models (as of July 2019) are
              supported:</p>

              <ul>
                <li>Raspberry Pi 4
                <li>Raspberry Pi 3 (including B+/A+)
                <li>Raspberry Pi 2
                <li>Raspberry Pi 1 (including B+/A+)
                <li>Raspberry Pi Zero
              </ul>

              <p>Please also observe answers to questions relating to operating
              systems and Python versions.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">I installed a package from piwheels and
              it doesn't work as expected</a>

            <div class="accordion-content" data-tab-content>
              <p>Some packages build differently depending on the tools
              available. For example, if the package <code>matplotlib</code> is
              built with <code>pyqt</code> installed, the wheel will depend on
              the user also having <code>pyqt</code> installed. If it is built
              without <code>pyqt</code>, the user can use
              <code>matplotlib</code> without <code>pyqt</code>.</p>

              <p>If you find an issue with a package installed from piwheels,
              please <a href="https://github.com/piwheels/packages/issues/new?template=broken-package.md">submit
              an issue on github</a>.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Which Python versions does
            piwheels support?</a>

            <div class="accordion-content" data-tab-content>
              <p>Currently, piwheels supports Python 3 only. While most
              packages available will work in any version of Python 3, some
              packages are only compatible with the minor version with which
              they were built. We build using for the ABI of the Python 3
              version distributed with Raspbian releases:</p>

              <ul>
                <li>Raspbian Jessie - Python 3.4</li>
                <li>Raspbian Stretch - Python 3.5</li>
                <li>Raspbian Buster - Python 3.7</li>
              </ul>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Where can I find the piwheels source
              code?</a>

            <div class="accordion-content" data-tab-content>
            <p>The source code for the piwheels project can be found on GitHub
            at <a href="https://github.com/piwheels/piwheels">github.com/piwheels/piwheels</a>.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">What infrastructure does the
            piwheels project use?</a>

            <div class="accordion-content" data-tab-content>
              <p>The piwheels project is hosted on a cluster of Raspberry Pi 3s
              provided by <a
              href="https://www.mythic-beasts.com/order/rpi">Mythic Beasts</a>.
              The web pages and wheel files are served from a single Raspberry
              Pi, we use a separate VM to host the database, and use several
              other Raspberry Pis accross different Raspbian versions to build
              wheels.</p>

              <p>The original build run was completed by a total of 20
              Raspberry Pis, and now a smaller cluster (7 Pis) remains active,
              continuing to build new package releases.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">The package I installed took a long
              time to install, despite being available on piwheels.</a>

            <div class="accordion-content" data-tab-content>
              <p>First of all: check your pip configuration and confirm that
              piwheels is in fact being used. You should see <code>downloading
              from https://www.piwheels.org</code>.</p>

              <p>If you are definitely using piwheels, it could be that while
              the package you installed was available on piwheels, perhaps one
              of its dependencies is not available, and requires downloading
              from PyPI and building from source. Reading the output from the
              pip command should tell you what's going on.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Why are the wheel files are
            tagged with Armv6 and Armv7? What about Armv8?</a>

            <div class="accordion-content" data-tab-content>
              <p>While the hardware in Raspberry Pi 1 and Zero is Armv6, Pi 2 is
              Armv7, Pi 3 and 4 are Armv8, the Raspbian operating system images
              provided on raspberrypi.org are made to support all three
              architectures (and are compatible with all Raspberry Pi products
              to date) by operating in Armv6 userland.</p>

              <p>However, wheels built on a Raspberry Pi 2 or 3 are tagged
              <code>armv7l</code>. Since wheels built on a Raspberry Pi 3 will
              work on a Pi 4, 3, 2, 1 or Zero, we simply provide Pi 3-built
              wheels renamed <code>armv6l</code>, with a few exceptions (some
              packages, like opencv and tensorflow, are built with optimisations
              available on Pi 3).</p>

              <p>Also see the following answer.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">What about aarch64?</a>

            <div class="accordion-content" data-tab-content>
              <p>aarch64 is the 64-bit execution state of the ARMv8 instruction
              set architecture. It's possible to run an aarch64 operating system
              on Raspberry Pi 3 and 4, but the officially supported operating
              system, Raspbian, does not currently build for aarch64. Since
              piwheels.org only builds wheels on Raspbian, no aarch64 (armv8l)
              wheels are provided. Other projects may wish to use the <a
              href="https://github.com/piwheels/piwheels">piwheels project
              source code</a> to run an aarch64 wheel repository for other
              distributions.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Will wheels provided on piwheels
            work on other Arm platforms?</a>

            <div class="accordion-content" data-tab-content>
              <p>Some wheels may work on other Arm platforms, but we can't
              guarantee this. We only officially support Raspbian on Raspberry
              Pi, but you may or may not have success using wheels on other
              distributions or other boards. We won't accept bug reports for
              unsupported platforms.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Does piwheels work for the
            Raspberry Pi Desktop operating system for x86?</a>

            <div class="accordion-content" data-tab-content>
            <p>See the following answer.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Can I install packages from
            piwheels on my PC/Mac to speed up installations?</a>

            <div class="accordion-content" data-tab-content>
              <p>Pure Python wheels will likely work, but there's a much
              smaller speed increase installing from wheels over source
              distribution. Packages requiring compilation are built for a
              specific architecture, so they will not be useful on non-Arm
              platforms and will be ignored. Assuming your pip configuration
              is set to fall back to PyPI, installation will continue from
              there, which may involve building from source. There's no harm in
              trying to use piwheels on a PC/Mac but it's not likely of any
              help.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">Are you going to upload all the
            wheels to PyPI?</a>

            <div class="accordion-content" data-tab-content>
              <p>No - we can't. Only package maintainers can upload files to
              PyPI. We don't recommend that package maintainers upload Raspberry
              Pi Arm wheels to PyPI in case they don't work on other Arm
              platforms. Raspberry Pi users have access to piwheels, so that
              should suffice.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">I'm a package maintainer. Can I
            upload an Arm wheel to PyPI?</a>

            <div class="accordion-content" data-tab-content>
              <p>PyPI now allows uploading Armv6 and Armv7 wheels, but we
              recommend that you don't upload Arm wheels to PyPI for
              incompatibility reasons and other complications.</p>

              <p>Wheels built on a Raspberry Pi 3, although tagged
              <code>armv7l</code> are not truly Armv7, and may be incompatible
              with other Arm platforms. If your package is made exclusively for
              the Raspberry Pi platform, there is no harm in uploading Arm
              wheels to PyPI, and this will speed up the installation for users
              who do not have pip configured to use piwheels. However, it is not
              possible to upload two indentical wheel files with
              <code>armv6l</code> and <code>armv7l</code> platform tags, so the
              second one will be rejected by PyPI.</p>

              <p>If you intend for your package to be installed by users in
              multiple Arm platforms, you may be best not to upload Arm wheels
              to PyPI and instead leave Raspberry Pi users to get a wheel from
              piwheels, and leave other Arm platform users to build from
              source.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">I'm a package maintainer. How
            can I remove a wheel from piwheels?</a>

            <div class="accordion-content" data-tab-content>
              <p><a
              href="https://github.com/piwheels/packages/issues/new?template=package.md">Open
              an issue on github</a> and we'll endeavour to remove it as soon
              as we can. In cases where it's not obvious that the requester
              owns the package to be removed, we may require further evidence
              that you are authorized to request its removal (e.g. posting as
              the GitHub owner of the project, or some similar standard of
              proof on the relevant hosting service).</p>

              <p>Note that we only currently track package additions from PyPI
              upstream; we <i>don't</i> honour package removals from PyPI hence
              removals must be requested manually. Frankly, package removal
              is an area fraught with difficulty. Even if we remove a given
              package from piwheels there's no guarantee some downstream mirror
              hasn't already got it, or another mirror of PyPI. The best
              solution to ensure your users avoid a given release is to cut a
              <i>new</i> release of your package with a higher version
              number.</p>

              <p>If you do request removal, please let us know if you'd like
              piwheels to avoid building future releases of your package. We
              can arrange this trivially via a skip flag in our database.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">My package is really popular, so
                why are the download stats so low?</a>

            <div class="accordion-content" data-tab-content>
              <p>We only log downloads from piwheels.org, not from PyPI. If your
              package is pure Python, and you submit wheels to PyPI (as you
              should), users will get the file from PyPI, not from piwheels. The
              only downloads from piwheels for these packages will be if people
              are explicitly choosing to download from piwheels. You can use
              projects like <a href="https://pypistats.org">pypistats.org</a> to
              get the numbers from PyPI, and aggregate them.</p>

              <p>Additionally, if your project is packaged for Debian/Raspbian,
              people could be installing your package with apt, rather than
              pip.</p>
            </div>
          </div>

          <div class="accordion-item" data-accordion-item>
            <a href="#" class="accordion-title">I installed a package from
            piwheels and I get an ImportError with the message "cannot open
            shared object file".</a>

            <div class="accordion-content" data-tab-content>
              <p>Packages built by piwheels may depend on the presence of
              certain shared libraries. This is resolved by installing apt
              packages which provide the required shared objects.</p>

              <p>We calculate dependencies after building wheels, and show them
              on the package project pages.</p>

              <p>It is possible to discover dependencies yourself using
              <code>ldd</code> and <code>apt-file</code>. Read more about this
              process on the <a
              href="https://blog.piwheels.org/how-to-work-out-the-missing-dependencies-for-a-python-package/">piwheels
              blog</a>.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
